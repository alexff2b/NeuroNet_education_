<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classia_vector" kind="class" language="C++" prot="public">
    <compoundname>iaVector</compoundname>
    <includes refid="ia_vector_8h" local="no">iaVector.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classia_vector_1ae4bfe27207eb576f8b0e8505a508e39c" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int iaVector::m</definition>
        <argsstring></argsstring>
        <name>m</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aleksandri/Documents/GitHub/NeuroNet_education_/iaVector.h" line="35" column="5" bodyfile="C:/Users/aleksandri/Documents/GitHub/NeuroNet_education_/iaVector.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classia_vector_1ad73fc975a69fb1c91884388eb5ba648e" prot="private" static="no" mutable="no">
        <type>double *</type>
        <definition>double* iaVector::value</definition>
        <argsstring></argsstring>
        <name>value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aleksandri/Documents/GitHub/NeuroNet_education_/iaVector.h" line="36" column="8" bodyfile="C:/Users/aleksandri/Documents/GitHub/NeuroNet_education_/iaVector.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classia_vector_1aeb696e20231b42a4131b137197d744ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>iaVector::iaVector</definition>
        <argsstring>()</argsstring>
        <name>iaVector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aleksandri/Documents/GitHub/NeuroNet_education_/iaVector.h" line="20" column="1" bodyfile="C:/Users/aleksandri/Documents/GitHub/NeuroNet_education_/iaVector.cpp" bodystart="15" bodyend="15"/>
      </memberdef>
      <memberdef kind="function" id="classia_vector_1a790c503ace60e30fc7d1a81345118477" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>iaVector::iaVector</definition>
        <argsstring>(int m)</argsstring>
        <name>iaVector</name>
        <param>
          <type>int</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aleksandri/Documents/GitHub/NeuroNet_education_/iaVector.h" line="21" column="1" bodyfile="C:/Users/aleksandri/Documents/GitHub/NeuroNet_education_/iaVector.cpp" bodystart="17" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="classia_vector_1a268d4ca5b1f07e60ccb88fe5ab85057b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>iaVector::iaVector</definition>
        <argsstring>(int m, const double values[])</argsstring>
        <name>iaVector</name>
        <param>
          <type>int</type>
          <declname>m</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>values</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aleksandri/Documents/GitHub/NeuroNet_education_/iaVector.h" line="22" column="1" bodyfile="C:/Users/aleksandri/Documents/GitHub/NeuroNet_education_/iaVector.cpp" bodystart="22" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="classia_vector_1acb1dcdc5070c8e8b0fff6a3f19b87b90" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>iaVector::iaVector</definition>
        <argsstring>(iaVector &amp;otherVector)</argsstring>
        <name>iaVector</name>
        <param>
          <type><ref refid="classia_vector" kindref="compound">iaVector</ref> &amp;</type>
          <declname>otherVector</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aleksandri/Documents/GitHub/NeuroNet_education_/iaVector.h" line="23" column="1" bodyfile="C:/Users/aleksandri/Documents/GitHub/NeuroNet_education_/iaVector.cpp" bodystart="26" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="classia_vector_1a5f8915a69a7b1460f1a29e5a4e748df3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>iaVector::~iaVector</definition>
        <argsstring>()</argsstring>
        <name>~iaVector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aleksandri/Documents/GitHub/NeuroNet_education_/iaVector.h" line="25" column="1" bodyfile="C:/Users/aleksandri/Documents/GitHub/NeuroNet_education_/iaVector.cpp" bodystart="28" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="classia_vector_1a82d20ecd1daa52dc1641bef8a39f84a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int iaVector::sizeOfVector</definition>
        <argsstring>()</argsstring>
        <name>sizeOfVector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aleksandri/Documents/GitHub/NeuroNet_education_/iaVector.h" line="27" column="5" bodyfile="C:/Users/aleksandri/Documents/GitHub/NeuroNet_education_/iaVector.cpp" bodystart="30" bodyend="32"/>
        <referencedby refid="classia_network_1a04287239300c639035ccd36178feeaad" compoundref="ia_network_8cpp" startline="52" endline="106">iaNetwork::ForwardPropogation</referencedby>
        <referencedby refid="classia_network_1a634697f9880299b612e809d14b1b0eea" compoundref="ia_network_8cpp" startline="108" endline="124">iaNetwork::BackwardPropogation</referencedby>
        <referencedby refid="tests_8h_1a3a95f4fbd646c7c5affa7154b0afabf8" compoundref="tests_8cpp" startline="1" endline="31">iaVectorTest</referencedby>
      </memberdef>
      <memberdef kind="function" id="classia_vector_1a0ff4af3e76a789483fbd50cd49eda6a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void iaVector::printVector</definition>
        <argsstring>()</argsstring>
        <name>printVector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aleksandri/Documents/GitHub/NeuroNet_education_/iaVector.h" line="29" column="6" bodyfile="C:/Users/aleksandri/Documents/GitHub/NeuroNet_education_/iaVector.cpp" bodystart="34" bodyend="39"/>
        <referencedby refid="tests_8h_1a3a95f4fbd646c7c5affa7154b0afabf8" compoundref="tests_8cpp" startline="1" endline="31">iaVectorTest</referencedby>
      </memberdef>
      <memberdef kind="function" id="classia_vector_1a67dab91c20b683b426841bab9b77e4f6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double &amp;</type>
        <definition>double&amp; iaVector::operator[]</definition>
        <argsstring>(int j)</argsstring>
        <name>operator[]</name>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aleksandri/Documents/GitHub/NeuroNet_education_/iaVector.h" line="31" column="8" bodyfile="C:/Users/aleksandri/Documents/GitHub/NeuroNet_education_/iaVector.h" bodystart="31" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="classia_vector_1a52cd595f0bc9b19d43abc47cc2da2ce5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double *</type>
        <definition>double* iaVector::operator&amp;</definition>
        <argsstring>(int j)</argsstring>
        <name>operator&amp;</name>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/aleksandri/Documents/GitHub/NeuroNet_education_/iaVector.h" line="32" column="8" bodyfile="C:/Users/aleksandri/Documents/GitHub/NeuroNet_education_/iaVector.h" bodystart="32" bodyend="32"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="C:/Users/aleksandri/Documents/GitHub/NeuroNet_education_/iaVector.h" line="17" column="15" bodyfile="C:/Users/aleksandri/Documents/GitHub/NeuroNet_education_/iaVector.h" bodystart="17" bodyend="37"/>
    <listofallmembers>
      <member refid="classia_vector_1aeb696e20231b42a4131b137197d744ee" prot="public" virt="non-virtual"><scope>iaVector</scope><name>iaVector</name></member>
      <member refid="classia_vector_1a790c503ace60e30fc7d1a81345118477" prot="public" virt="non-virtual"><scope>iaVector</scope><name>iaVector</name></member>
      <member refid="classia_vector_1a268d4ca5b1f07e60ccb88fe5ab85057b" prot="public" virt="non-virtual"><scope>iaVector</scope><name>iaVector</name></member>
      <member refid="classia_vector_1acb1dcdc5070c8e8b0fff6a3f19b87b90" prot="public" virt="non-virtual"><scope>iaVector</scope><name>iaVector</name></member>
      <member refid="classia_vector_1ae4bfe27207eb576f8b0e8505a508e39c" prot="private" virt="non-virtual"><scope>iaVector</scope><name>m</name></member>
      <member refid="classia_vector_1a52cd595f0bc9b19d43abc47cc2da2ce5" prot="public" virt="non-virtual"><scope>iaVector</scope><name>operator&amp;</name></member>
      <member refid="classia_vector_1a67dab91c20b683b426841bab9b77e4f6" prot="public" virt="non-virtual"><scope>iaVector</scope><name>operator[]</name></member>
      <member refid="classia_vector_1a0ff4af3e76a789483fbd50cd49eda6a5" prot="public" virt="non-virtual"><scope>iaVector</scope><name>printVector</name></member>
      <member refid="classia_vector_1a82d20ecd1daa52dc1641bef8a39f84a9" prot="public" virt="non-virtual"><scope>iaVector</scope><name>sizeOfVector</name></member>
      <member refid="classia_vector_1ad73fc975a69fb1c91884388eb5ba648e" prot="private" virt="non-virtual"><scope>iaVector</scope><name>value</name></member>
      <member refid="classia_vector_1a5f8915a69a7b1460f1a29e5a4e748df3" prot="public" virt="non-virtual"><scope>iaVector</scope><name>~iaVector</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
